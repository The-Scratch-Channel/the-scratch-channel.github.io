name: Vercel Deployment Monitor

on:
  deployment_status:

jobs:
  handle-vercel-failure:
    if: ${{ github.event.deployment_status.state == 'failure' && github.event.deployment.environment == 'Production' }}
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Wait 10 seconds before checking
        run: sleep 10

      - name: Create failure issue if not exists
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Vercel Deployment Failure';

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'deployment',
            });

            const exists = issues.some(issue => issue.title === title);

            if (!exists) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body: `Deployment to Vercel failed

                **Details:**  
                - Status: \`Failed\`  
                - Logs: [View Deployment](${context.payload.deployment_status?.target_url || context.payload.repository?.html_url})
                
                *I am a bot, and this issue was generated automatically.*
                `,
                labels: ['deployment', 'HIGH PRIORITY'],
                assignees: ['polylogue2', 'krxzy_krxzy', 'nouxinf']
              });
            } else {
              console.log('Issue already exists.');
            }

  close-vercel-failure:
    if: ${{ github.event.deployment_status.state == 'success' && github.event.deployment.environment == 'Production' }}
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Wait 10 seconds before checking
        run: sleep 10

      - name: Close open failure issue if exists
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Vercel Deployment Failure';

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'deployment',
            });

            const issue = issues.find(issue => issue.title === title);

            if (issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: 'This issue was closed as the deployment was resolved.'
              });

              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });

              console.log('Closed issue #' + issue.number);
            } else {
              console.log('No open deployment issue to close.');
            }
