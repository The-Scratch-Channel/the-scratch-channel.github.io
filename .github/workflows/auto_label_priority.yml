name: Auto Label and React

on:
  issues:
    types: [opened, edited]

jobs:
  label_and_comment:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Analyze and label issue
        uses: actions/github-script@v7
        id: labeler
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            const body = (issue.body || "").toLowerCase();
            const existingLabels = issue.labels.map(l => l.name.toLowerCase());

            let labelsToAdd = [];

            const hasKeyword = (keywords) =>
              keywords.some(k => title.includes(k) || body.includes(k));

            const hasLabel = (label) =>
              existingLabels.includes(label.toLowerCase());

            if (hasKeyword(["urgent"])) {
              labelsToAdd.push("HIGH PRIORITY");
            }

            if (hasKeyword(["deployment"]) || hasLabel("deployment")) {
              labelsToAdd.push("HIGH PRIORITY");
              if (!hasLabel("deployment")) labelsToAdd.push("deployment");
            }

            if (hasKeyword(["bug"]) || hasLabel("bug")) {
              labelsToAdd.push("Medium Priority");
              if (!hasLabel("bug")) labelsToAdd.push("bug");
            }

            if (hasKeyword(["enhancement", "request", "suggestion"]) || hasLabel("enhancement")) {
              labelsToAdd.push("Low Priority");
              if (!hasLabel("enhancement")) labelsToAdd.push("enhancement");
            }

            // Remove duplicates and filter out existing labels
            labelsToAdd = [...new Set(labelsToAdd)]
              .filter(label => !hasLabel(label));

            if (labelsToAdd.length === 0) {
              console.log("No new labels to add.");
              return;
            }

            // Add new labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: labelsToAdd
            });

            // Comment on the issue
            const labelList = labelsToAdd.map(label => '`' + label + '`').join(' ');
            const commentBody = "The following label(s) were added to this issue: " + labelList + "\n\n*I am a bot made by @polylogue2 and may make mistakes.*";

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: commentBody
            });
